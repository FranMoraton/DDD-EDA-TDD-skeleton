openapi: 3.0.0
info:
    title: Users API
    description: API for user management in the system.
    version: 1.0.0
paths:
    /search:
        get:
            summary: Search events
            description: Search for events based on specified criteria.
            parameters:
                -   name: starts_at
                    in: query
                    required: true
                    schema:
                        type: string
                        format: date-time
                    description: The start date and time to filter events.
                -   name: ends_at
                    in: query
                    required: true
                    schema:
                        type: string
                        format: date-time
                    description: The end date and time to filter events.
                -   name: items_per_page
                    in: query
                    required: false
                    schema:
                        type: integer
                        minimum: 1
                    description: Number of items per page.
                -   name: page
                    in: query
                    required: false
                    schema:
                        type: integer
                        minimum: 1
                    description: Page number to retrieve.
            responses:
                '200':
                    description: Successful response with events data.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            events:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/EventProjection'
                                    error:
                                        type: string
                                        nullable: true
                '400':
                    description: Invalid request parameters.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            code:
                                                type: integer
                                            message:
                                                type: string
                                    data:
                                        type: object
                                        nullable: true
                '500':
                    description: Generic error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            code:
                                                type: string
                                            message:
                                                type: string
                                    data:
                                        type: object
                                        nullable: true
    /v1/events/{id}:
        get:
            summary: Retrieve event by ID
            description: Fetches the details of a specific event by its unique ID.
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The ID of the event to retrieve.
            responses:
                '200':
                    description: Successfully retrieved event details.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Event'
                '404':
                    description: Event not found.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Event not found
    /v1/events/provider:
        post:
            summary: Bring events from external provider
            description: Brings events from an external provider and processes them.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BringFromProviderRequest'
            responses:
                '200':
                    description: Events successfully fetched and processed.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BringFromProviderResponse'
                '500':
                    description: Internal server error when processing events.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Internal server error.
    /v1/users:
        post:
            summary: Create a new user
            operationId: createUser
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: string
                                email:
                                    type: string
                                role:
                                    type: string
                                password:
                                    type: string
                            required:
                                - id
                                - email
                                - role
                                - password
            responses:
                200:
                    description: User successfully created
                400:
                    description: Invalid request
                409:
                    description: User already exists
    /v1/users/{id}:
        get:
            summary: Get user by ID
            operationId: getUserById
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: User found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string
                                    email:
                                        type: string
                                    role:
                                        type: string
                404:
                    description: User not found
        delete:
            summary: Delete a user
            operationId: deleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: User successfully deleted
                404:
                    description: User not found
        patch:
            summary: Update user information
            operationId: updateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                role:
                                    type: string
                            required:
                                - email
                                - role
            responses:
                200:
                    description: User successfully updated
                400:
                    description: Invalid request
                404:
                    description: User not found
                409:
                    description: Email is already in use
    /v1/login:
        post:
            summary: User login
            operationId: loginUser
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                password:
                                    type: string
                            required:
                                - email
                                - password
            responses:
                200:
                    description: Login successful
                401:
                    description: Invalid credentials
components:
    schemas:
        User:
            type: object
            properties:
                id:
                    type: string
                email:
                    type: string
                role:
                    type: string
        EventProjection:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                title:
                    type: string
                start_date:
                    type: string
                    format: date
                start_time:
                    type: string
                    format: time
                end_date:
                    type: string
                    format: date
                end_time:
                    type: string
                    format: time
                min_price:
                    type: number
                    format: float
                max_price:
                    type: number
                    format: float
        Event:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                base_event_id:
                    type: integer
                sell_mode:
                    type: string
                title:
                    type: string
                event_start_date:
                    type: string
                    format: date-time
                event_end_date:
                    type: string
                    format: date-time
                event_id:
                    type: integer
                sell_from:
                    type: string
                    format: date-time
                sell_to:
                    type: string
                    format: date-time
                sold_out:
                    type: boolean
                request_time:
                    type: string
                    format: date-time
                organizer_company_id:
                    type: string
                    nullable: true
                zones:
                    type: array
                    items:
                        $ref: '#/components/schemas/Zone'
        BringFromProviderRequest:
            type: object
            properties:
                provider_id:
                    type: string
                    description: The ID of the provider from which to fetch events.
        BringFromProviderResponse:
            type: object
            properties:
                message:
                    type: string
                    example: Events successfully brought from provider.
        Zone:
            type: object
            properties:
                zone_id:
                    type: integer
                capacity:
                    type: integer
                price:
                    type: number
                    format: float
                name:
                    type: string
                numbered:
                    type: boolean