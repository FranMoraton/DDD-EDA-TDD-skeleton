services:
    nginx:
        build:
            context: .
            dockerfile: docker/nginx/Dockerfile
            target: local
        volumes:
            - ./public:/var/www/public
        environment:
            PHP_HOST: php
        ports:
            - 8080:80
        depends_on:
            - php
        networks:
            - bridge

    php:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
            target: development
        volumes:
            - .:/var/www
            - ~/.composer:/.composer
        networks:
            - bridge

    db:
        image: postgres:15.7-alpine
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: guest
            POSTGRES_PASSWORD: guest
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
            interval: 3s
            timeout: 1s
            retries: 5
        networks:
            - bridge

    amqp:
        build:
            context: .
            dockerfile: docker/rabbitmq/Dockerfile
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - amqp-data:/var/lib/rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
            RABBITMQ_DEFAULT_VHOST: app
        networks:
            - bridge

    openapi:
        image: swaggerapi/swagger-ui
        environment:
            - SWAGGER_JSON=/docs/openapi.yaml
        volumes:
            - ./docs:/docs
        ports:
            - 8090:8080
        networks:
            - bridge

    asyncapi:
        build:
            context: .
            dockerfile: docker/asyncapi/Dockerfile
        volumes:
            - ./docs:/app/docs
        ports:
            - 8091:80
        networks:
            - bridge

    command-worker:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
            target: development_worker
        command: console messenger:consume commands --bus=messenger_command.bus --time-limit=60 -m 1 --memory-limit=128M --no-interaction
        volumes:
            - .:/var/www
        depends_on:
            - php
            - db
            - amqp
        restart: always
        networks:
            - bridge

    event-worker:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
            target: development_worker
        command: console messenger:consume events --bus=messenger_event.bus --time-limit=60 -m 1 --memory-limit=128M --no-interaction
        volumes:
            - .:/var/www
        depends_on:
            - php
            - db
            - amqp
        restart: always
        networks:
            - bridge

    cronjob:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
            target: development_worker
        command: /bin/sh -c "while true; do console marketplace:events:from-provider; sleep 60; done"
        volumes:
            - .:/var/www
        depends_on:
            - php
            - db
            - amqp
        restart: always
        networks:
            - bridge

networks:
    bridge:

volumes:
    postgres_data:
    amqp-data:
